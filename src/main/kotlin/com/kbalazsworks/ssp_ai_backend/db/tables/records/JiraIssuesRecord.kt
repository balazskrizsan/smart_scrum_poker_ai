/*
 * This file is generated by jOOQ.
 */
package com.kbalazsworks.ssp_ai_backend.db.tables.records


import com.kbalazsworks.ssp_ai_backend.db.tables.JiraIssues

import java.time.LocalDateTime

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class JiraIssuesRecord() : UpdatableRecordImpl<JiraIssuesRecord>(JiraIssues.JIRA_ISSUES) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var jiraSprintId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var rawJson: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var openaiCompatibleText: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var createdAt: LocalDateTime?
        set(value): Unit = set(4, value)
        get(): LocalDateTime? = get(4) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised JiraIssuesRecord
     */
    constructor(id: Long? = null, jiraSprintId: Long? = null, rawJson: String? = null, openaiCompatibleText: String? = null, createdAt: LocalDateTime? = null): this() {
        this.id = id
        this.jiraSprintId = jiraSprintId
        this.rawJson = rawJson
        this.openaiCompatibleText = openaiCompatibleText
        this.createdAt = createdAt
        resetChangedOnNotNull()
    }
}
