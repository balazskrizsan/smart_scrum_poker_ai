/*
 * This file is generated by jOOQ.
 */
package com.kbalazsworks.ssp_ai_backend.db.tables.records


import com.kbalazsworks.ssp_ai_backend.db.tables.VectorStore_3072
import com.pgvector.PGvector

import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class VectorStore_3072Record() : TableRecordImpl<VectorStore_3072Record>(VectorStore_3072.VECTOR_STORE_3072) {

    open var questionId: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var jiraIssueId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var vectorModelId: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var embedding: PGvector?
        set(value): Unit = set(3, value)
        get(): PGvector? = get(3) as PGvector?

    /**
     * Create a detached, initialised VectorStore_3072Record
     */
    constructor(questionId: Long? = null, jiraIssueId: Long? = null, vectorModelId: Long? = null, embedding: PGvector? = null): this() {
        this.questionId = questionId
        this.jiraIssueId = jiraIssueId
        this.vectorModelId = vectorModelId
        this.embedding = embedding
        resetChangedOnNotNull()
    }
}
